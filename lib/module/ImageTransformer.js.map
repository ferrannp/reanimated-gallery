{"version":3,"sources":["ImageTransformer.tsx"],"names":["React","useRef","StyleSheet","Dimensions","Image","Animated","withSpring","withTiming","useSharedValue","useAnimatedStyle","cancelAnimation","useDerivedValue","Easing","PinchGestureHandler","PanGestureHandler","TapGestureHandler","vec","useAnimatedGestureHandler","withDecay","fixGestureHandler","clamp","windowDimensions","width","get","height","styles","fill","absoluteFillObject","wrapper","justifyContent","alignItems","container","flex","backgroundColor","springConfig","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","timingConfig","duration","easing","bezier","ImageTransformer","memo","pagerRefs","source","uri","onPageStateChange","imageSource","MAX_SCALE","MIN_SCALE","OVER_SCALE","pinchRef","panRef","tapRef","panState","pinchState","scale","scaleOffset","translation","useSharedVector","panVelocity","scaleTranslation","offset","canvas","create","targetWidth","scaleFactor","targetHeight","image","canPanVertically","value","maybeRunOnEnd","target","fixedScale","scaledImage","y","rightBoundary","x","topBoundary","Math","abs","maxVector","minVector","invert","eq","set","deceleration","velocity","onPanEvent","onInit","_","ctx","panOffset","beforeEach","evt","pan","translationX","translationY","velocityX","velocityY","shouldHandleEvent","onStart","onActive","state","numberOfPointers","nextTranslate","add","onEnd","onScaleEvent","origin","gestureScale","nextScale","focal","focalX","focalY","CENTER","divide","adjustFocal","sub","afterEach","pinch","nextTranslation","multiply","onTapEvent","animatedStyles","noOffset","noTranslation","noScaleTranslation","pagerNextState","transform","translateX","translateY"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport {\n  StyleSheet,\n  Dimensions,\n  Image,\n  ImageRequireSource,\n  ViewStyle,\n} from 'react-native';\nimport Animated, {\n  withSpring,\n  withTiming,\n  useSharedValue,\n  useAnimatedStyle,\n  cancelAnimation,\n  useDerivedValue,\n  Easing,\n} from 'react-native-reanimated';\nimport {\n  PinchGestureHandler,\n  PanGestureHandler,\n  TapGestureHandler,\n  State,\n  PanGestureHandlerGestureEvent,\n  PinchGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport * as vec from './vectors';\nimport { useAnimatedGestureHandler } from './useAnimatedGestureHandler';\nimport withDecay from './withDecay';\nimport { fixGestureHandler, clamp } from './utils';\n\nconst windowDimensions = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\n\nconst styles = {\n  fill: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n  },\n};\n\nconst springConfig = {\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n  restDisplacementThreshold: 0.01,\n  restSpeedThreshold: 0.01,\n};\n\nconst timingConfig = {\n  duration: 250,\n  easing: Easing.bezier(0.33, 0.01, 0, 1),\n};\n\ntype IImageTransformerProps = {\n  pagerRefs: React.Ref<any>[];\n  source?: ImageRequireSource;\n  uri?: string;\n  width: number;\n  height: number;\n  onPageStateChange: (nextPagerState: boolean) => void;\n};\n\nexport const ImageTransformer = React.memo<IImageTransformerProps>(\n  ({\n    pagerRefs = [],\n    source,\n    uri,\n    width,\n    height,\n    onPageStateChange = () => {},\n  }) => {\n    fixGestureHandler();\n\n    const imageSource = source ?? {\n      uri,\n    };\n\n    const MAX_SCALE = 3;\n    const MIN_SCALE = 0.7;\n    const OVER_SCALE = 0.5;\n\n    const pinchRef = useRef(null);\n    const panRef = useRef(null);\n    const tapRef = useRef(null);\n\n    const panState = useSharedValue<State>(-1);\n    const pinchState = useSharedValue<State>(-1);\n\n    const scale = useSharedValue(1);\n    const scaleOffset = useSharedValue(1);\n    const translation = vec.useSharedVector(0, 0);\n    const panVelocity = vec.useSharedVector(0, 0);\n    const scaleTranslation = vec.useSharedVector(0, 0);\n    const offset = vec.useSharedVector(0, 0);\n\n    const canvas = vec.create(\n      windowDimensions.width,\n      windowDimensions.height,\n    );\n    const targetWidth = windowDimensions.width;\n    const scaleFactor = width / targetWidth;\n    const targetHeight = height / scaleFactor;\n    const image = vec.create(targetWidth, targetHeight);\n\n    const canPanVertically = useDerivedValue(() => {\n      return windowDimensions.height < targetHeight * scale.value;\n    });\n\n    const maybeRunOnEnd = () => {\n      'worklet';\n\n      const target = vec.create(0, 0);\n\n      const fixedScale = clamp(MIN_SCALE, scale.value, MAX_SCALE);\n      const scaledImage = image.y * fixedScale;\n      const rightBoundary = (canvas.x / 2) * (fixedScale - 1);\n\n      let topBoundary = 0;\n\n      if (canvas.y < scaledImage) {\n        topBoundary = Math.abs(scaledImage - canvas.y) / 2;\n      }\n\n      const maxVector = vec.create(rightBoundary, topBoundary);\n      const minVector = vec.invert(maxVector);\n\n      if (!canPanVertically.value) {\n        offset.y.value = withSpring(target.y, springConfig);\n      }\n\n      if (panState.value !== 5 || pinchState.value !== 5) {\n        return;\n      }\n\n      if (\n        vec.eq(offset, 0) &&\n        vec.eq(translation, 0) &&\n        vec.eq(scaleTranslation, 0) &&\n        scale.value === 1\n      ) {\n        // we don't need to run any animations\n        return;\n      }\n\n      if (scale.value <= 1) {\n        // just center it\n        vec.set(target, 0);\n      } else {\n        vec.set(target, vec.clamp(offset, minVector, maxVector));\n      }\n\n      const deceleration = 0.991;\n\n      if (\n        target.x === offset.x.value &&\n        Math.abs(panVelocity.x.value) > 0 &&\n        scale.value <= MAX_SCALE\n      ) {\n        offset.x.value = withDecay({\n          velocity: panVelocity.x.value,\n          clamp: [minVector.x, maxVector.x],\n          deceleration,\n        });\n      } else {\n        // run animation\n        offset.x.value = withSpring(target.x, springConfig);\n      }\n\n      if (\n        target.y === offset.y.value &&\n        Math.abs(panVelocity.y.value) > 0 &&\n        scale.value <= MAX_SCALE\n      ) {\n        offset.y.value = withDecay({\n          velocity: panVelocity.y.value,\n          clamp: [minVector.y, maxVector.y],\n          deceleration,\n        });\n      } else {\n        offset.y.value = withSpring(target.y, springConfig);\n      }\n    };\n\n    const onPanEvent = useAnimatedGestureHandler<\n      PanGestureHandlerGestureEvent,\n      {\n        panOffset: vec.Vector<number>;\n        pan: vec.Vector<number>;\n      }\n    >({\n      onInit: (_, ctx) => {\n        ctx.panOffset = vec.create(0, 0);\n      },\n\n      beforeEach: (evt, ctx) => {\n        ctx.pan = vec.create(evt.translationX, evt.translationY);\n        const velocity = vec.create(evt.velocityX, evt.velocityY);\n\n        vec.set(panVelocity, velocity);\n      },\n\n      shouldHandleEvent: () => {\n        return true;\n      },\n\n      onStart: (_, ctx) => {\n        cancelAnimation(offset.x);\n        cancelAnimation(offset.y);\n        ctx.panOffset = vec.create(0, 0);\n      },\n\n      onActive: (evt, ctx) => {\n        panState.value = evt.state;\n\n        if (scale.value > 1) {\n          if (evt.numberOfPointers > 1) {\n            // store pan offset during the pan with two fingers (during the pinch)\n            vec.set(ctx.panOffset, ctx.pan);\n          } else {\n            // subtract the offset and assign fixed pan\n            const nextTranslate = vec.add([\n              ctx.pan,\n              vec.invert(ctx.panOffset),\n            ]);\n            translation.x.value = nextTranslate.x;\n\n            if (canPanVertically.value) {\n              translation.y.value = nextTranslate.y;\n            }\n          }\n        }\n      },\n\n      onEnd: (evt, ctx) => {\n        panState.value = evt.state;\n\n        vec.set(ctx.panOffset, 0);\n        vec.set(offset, vec.add([offset, translation]));\n        vec.set(translation, 0);\n\n        maybeRunOnEnd();\n      },\n    });\n\n    const onScaleEvent = useAnimatedGestureHandler<\n      PinchGestureHandlerGestureEvent,\n      {\n        origin: vec.Vector<number>;\n        adjustFocal: vec.Vector<number>;\n        gestureScale: number;\n        nextScale: number;\n      }\n    >({\n      onInit: (_, ctx) => {\n        ctx.origin = vec.create(0, 0);\n        ctx.gestureScale = 1;\n      },\n\n      shouldHandleEvent: () => {\n        return true;\n      },\n\n      beforeEach: (evt, ctx) => {\n        // calculate the overall scale value\n        // also limits this.event.scale\n        ctx.nextScale = clamp(\n          evt.scale * scaleOffset.value,\n          MIN_SCALE,\n          MAX_SCALE + OVER_SCALE,\n        );\n\n        if (\n          ctx.nextScale > MIN_SCALE &&\n          ctx.nextScale < MAX_SCALE + OVER_SCALE\n        ) {\n          ctx.gestureScale = evt.scale;\n        }\n\n        // this is just to be able to use with vectors\n        const focal = vec.create(evt.focalX, evt.focalY);\n        const CENTER = vec.divide([canvas, 2]);\n\n        // focal with translate offset\n        // it alow us to scale into different point even then we pan the image\n        ctx.adjustFocal = vec.sub([focal, vec.add([CENTER, offset])]);\n      },\n\n      afterEach: (evt, ctx) => {\n        if (evt.state === 5) {\n          return;\n        }\n\n        scale.value = ctx.nextScale;\n      },\n\n      onStart: (_, ctx) => {\n        vec.set(ctx.origin, ctx.adjustFocal);\n      },\n\n      onActive: (evt, ctx) => {\n        pinchState.value = evt.state;\n\n        const pinch = vec.sub([ctx.adjustFocal, ctx.origin]);\n\n        const nextTranslation = vec.add([\n          pinch,\n          ctx.origin,\n          vec.multiply([-1, ctx.gestureScale, ctx.origin]),\n        ]);\n\n        vec.set(scaleTranslation, nextTranslation);\n      },\n\n      onEnd: (evt, ctx) => {\n        // reset gestureScale value\n        ctx.gestureScale = 1;\n        pinchState.value = evt.state;\n        // store scale value\n        scaleOffset.value = scale.value;\n\n        vec.set(offset, vec.add([offset, scaleTranslation]));\n        vec.set(scaleTranslation, 0);\n\n        if (scaleOffset.value < 1) {\n          // make sure we don't add stuff below the 1\n          scaleOffset.value = 1;\n\n          // this runs the spring animation\n          scale.value = withTiming(1, timingConfig);\n        } else if (scaleOffset.value > MAX_SCALE) {\n          scaleOffset.value = MAX_SCALE;\n          scale.value = withTiming(MAX_SCALE, timingConfig);\n        }\n\n        maybeRunOnEnd();\n      },\n    });\n\n    // FIXME: Tap gesture handler is not working\n    const onTapEvent = useAnimatedGestureHandler({\n      onStart: () => {\n        cancelAnimation(offset.x);\n        cancelAnimation(offset.y);\n      },\n\n      onEnd: () => {\n        maybeRunOnEnd();\n      },\n    });\n\n    const animatedStyles = useAnimatedStyle<ViewStyle>(() => {\n      const noOffset = offset.x.value === 0 && offset.y.value === 0;\n      const noTranslation =\n        translation.x.value === 0 && translation.y.value === 0;\n      const noScaleTranslation =\n        scaleTranslation.x.value === 0 &&\n        scaleTranslation.y.value === 0;\n\n      const pagerNextState =\n        scale.value === 1 &&\n        noOffset &&\n        noTranslation &&\n        noScaleTranslation;\n\n      onPageStateChange(pagerNextState);\n\n      return {\n        transform: [\n          {\n            translateX:\n              scaleTranslation.x.value +\n              translation.x.value +\n              offset.x.value,\n          },\n          {\n            translateY:\n              scaleTranslation.y.value +\n              translation.y.value +\n              offset.y.value,\n          },\n          { scale: scale.value },\n        ],\n      };\n    });\n\n    return (\n      <Animated.View\n        style={[styles.container, { width: windowDimensions.width }]}\n      >\n        <PinchGestureHandler\n          ref={pinchRef}\n          // enabled={false}\n          onGestureEvent={onScaleEvent}\n          simultaneousHandlers={[panRef, tapRef, ...pagerRefs]}\n          onHandlerStateChange={onScaleEvent}\n        >\n          <Animated.View style={styles.fill}>\n            <PanGestureHandler\n              ref={panRef}\n              minDist={5}\n              avgTouches\n              simultaneousHandlers={[pinchRef, tapRef, ...pagerRefs]}\n              onGestureEvent={onPanEvent}\n              onHandlerStateChange={onPanEvent}\n            >\n              <Animated.View style={styles.fill}>\n                <TapGestureHandler\n                  ref={tapRef}\n                  numberOfTaps={1}\n                  simultaneousHandlers={[\n                    pinchRef,\n                    panRef,\n                    ...pagerRefs,\n                  ]}\n                  onGestureEvent={onTapEvent}\n                  onHandlerStateChange={onTapEvent}\n                >\n                  <Animated.View style={styles.fill}>\n                    <Animated.View style={styles.wrapper}>\n                      <Animated.View style={animatedStyles}>\n                        <Image\n                          source={imageSource}\n                          // resizeMode=\"cover\"\n                          style={{\n                            width: targetWidth,\n                            height: targetHeight,\n                          }}\n                        />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </TapGestureHandler>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </PinchGestureHandler>\n      </Animated.View>\n    );\n  },\n);\n"]}