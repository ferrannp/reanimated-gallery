{"version":3,"sources":["Provider.tsx"],"names":["React","useContext","useRef","useEffect","useCallback","useState","useSharedValue","View","StyleSheet","GalleryState","ImagePager","GalleryOverlayContext","createContext","GalleryContext","useGalleryItem","index","item","gallery","ref","opacity","addImage","onPress","onShow","GalleryProvider","totalCount","children","setActiveGallery","GalleryOverlay","activeGallery","absoluteFill"],"mappings":"AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAAmBC,cAAnB,QAAyC,yBAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,SACEC,YADF,QAIO,gBAJP;AAKA,SAASC,UAAT,QAA2B,SAA3B;AAEA,MAAMC,qBAAqB,gBAAGX,KAAK,CAACY,aAAN,CAC5B,IAD4B,CAA9B;AAGA,MAAMC,cAAc,gBAAGb,KAAK,CAACY,aAAN,CAAyC,IAAzC,CAAvB;AAOA,OAAO,SAASE,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA0D;AAC/D,QAAMC,OAAO,GAAGhB,UAAU,CAACY,cAAD,CAA1B;AACA,QAAMK,GAAG,GAAGhB,MAAM,EAAlB;AACA,QAAMiB,OAAO,GAAGb,cAAc,CAAC,CAAD,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAAEG,QAAT,CAAkB;AAAEF,MAAAA,GAAF;AAAOH,MAAAA,KAAP;AAAcC,MAAAA,IAAd;AAAoBG,MAAAA;AAApB,KAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAME,OAAO,GAAGjB,WAAW,CAAC,MAAM;AAChCa,IAAAA,OAAO,CAAEK,MAAT,CAAgBP,KAAhB;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SAAO;AACLI,IAAAA,OADK;AAELD,IAAAA,GAFK;AAGLG,IAAAA;AAHK,GAAP;AAKD;AAOD,OAAO,SAASE,eAAT,CAAyB;AAC9BC,EAAAA,UAD8B;AAE9BC,EAAAA;AAF8B,CAAzB,EAGmB;AACxB,QAAMC,gBAAgB,GAAGzB,UAAU,CAACU,qBAAD,CAAnC;AACA,QAAM,CAACM,OAAD,IAAYZ,QAAQ,CACxB,IAAII,YAAJ,CAAiBiB,gBAAjB,EAAmCF,UAAnC,CADwB,CAA1B;AAIA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEP;AAAhC,KACGQ,QADH,CADF;AAKD;AAMD,OAAO,SAASE,cAAT,CAAwB;AAAEF,EAAAA;AAAF,CAAxB,EAA4D;AACjE,QAAM,CAACG,aAAD,EAAgBF,gBAAhB,IAAoCrB,QAAQ,CAChD,IADgD,CAAlD;AAIA,sBACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEqB;AAAvC,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,UAAU,CAACqB;AAAxB,KACGJ,QADH,EAGGG,aAAa,iBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA;AAArB,IAHpB,CADF,CADF;AASD","sourcesContent":["import React, {\n  useContext,\n  useRef,\n  useEffect,\n  useCallback,\n  useState,\n} from 'react';\nimport Animated, { useSharedValue } from 'react-native-reanimated';\nimport { View, StyleSheet } from 'react-native';\nimport {\n  GalleryState,\n  IShowFunction,\n  IGalleryItem,\n} from './GalleryState';\nimport { ImagePager } from './Pager';\n\nconst GalleryOverlayContext = React.createContext<IShowFunction | null>(\n  null,\n);\nconst GalleryContext = React.createContext<GalleryState | null>(null);\n\ntype IUseGalleryItem = {\n  index: number;\n  item: IGalleryItem;\n};\n\nexport function useGalleryItem({ index, item }: IUseGalleryItem) {\n  const gallery = useContext(GalleryContext);\n  const ref = useRef<Animated.Image>();\n  const opacity = useSharedValue(1);\n\n  useEffect(() => {\n    gallery!.addImage({ ref, index, item, opacity });\n  }, []);\n\n  const onPress = useCallback(() => {\n    gallery!.onShow(index);\n  }, []);\n\n  return {\n    opacity,\n    ref,\n    onPress,\n  };\n}\n\ntype IGalleryProviderProps = {\n  totalCount: number;\n  children: React.ReactNode;\n};\n\nexport function GalleryProvider({\n  totalCount,\n  children,\n}: IGalleryProviderProps) {\n  const setActiveGallery = useContext(GalleryOverlayContext)!;\n  const [gallery] = useState(\n    new GalleryState(setActiveGallery, totalCount),\n  );\n\n  return (\n    <GalleryContext.Provider value={gallery}>\n      {children}\n    </GalleryContext.Provider>\n  );\n}\n\ntype IGalleryOverlayProps = {\n  children: React.ReactNode;\n};\n\nexport function GalleryOverlay({ children }: IGalleryOverlayProps) {\n  const [activeGallery, setActiveGallery] = useState<unknown>(\n    null,\n  ) as [GalleryState, IShowFunction];\n\n  return (\n    <GalleryOverlayContext.Provider value={setActiveGallery}>\n      <View style={StyleSheet.absoluteFill}>\n        {children}\n\n        {activeGallery && <ImagePager gallery={activeGallery} />}\n      </View>\n    </GalleryOverlayContext.Provider>\n  );\n}\n"]}