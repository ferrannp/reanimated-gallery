{"version":3,"sources":["useInit.ts"],"names":["useSharedVector","vec","usedVectors","useRunOnce","cb","ref","current","usedWorklets","withTiming","withSpring","bezier","Easing","interpolate","withDecay","useAnimatedGestureHandler","useInit","x","Object","keys","forEach","key"],"mappings":";;;;;;;AAAA;;AAOA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAGA;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAsCC,GAA5C;AAAA,MAA4BC,WAA5B,4BAA4CD,GAA5C;;AAEA,SAASE,UAAT,CAAoBC,EAApB,EAAoC;AAClC,QAAMC,GAAG,GAAG,mBAAuB,IAAvB,CAAZ;;AAEA,MAAIA,GAAG,CAACC,OAAJ,KAAgB,IAApB,EAA0B;AACxBF,IAAAA,EAAE;AACFC,IAAAA,GAAG,CAACC,OAAJ,GAAc,IAAd;AACD;AACF;;AAED,MAAMC,YAAY;AAChBC,EAAAA,UAAU,EAAVA,iCADgB;AAEhBC,EAAAA,UAAU,EAAVA,iCAFgB;AAGhBC,EAAAA,MAAM,EAAEC,8BAAOD,MAHC;AAIhBE,EAAAA,WAAW,EAAXA,kCAJgB;AAKhBC,EAAAA,SAAS,EAATA,kBALgB;AAMhBC,EAAAA,yBAAyB,EAAzBA;AANgB,GAObZ,WAPa,CAAlB;;AAUO,SAASa,OAAT,GAAmB;AACxBZ,EAAAA,UAAU,CACR,oCAAQ,MAAM;AACZ;;AAEA,UAAMa,CAAyB,GAAG,EAAlC;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYX,YAAZ,EAA0BY,OAA1B,CAAmCC,GAAD,IAAS;AACzCJ,MAAAA,CAAC,CAACI,GAAD,CAAD,GAASb,YAAY,CAACa,GAAD,CAArB;AACD,KAFD;AAGD,GAPD,CADQ,CAAV;AAUD","sourcesContent":["import {\n  runOnUI,\n  withTiming,\n  withSpring,\n  Easing,\n  interpolate,\n} from 'react-native-reanimated';\nimport { useRef } from 'react';\nimport withDecay from './withDecay';\nimport { useAnimatedGestureHandler } from './useAnimatedGestureHandler';\nimport * as vec from './vectors';\n\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { useSharedVector, ...usedVectors } = vec;\n\nfunction useRunOnce(cb: () => void) {\n  const ref = useRef<boolean | null>(null);\n\n  if (ref.current === null) {\n    cb();\n    ref.current = true;\n  }\n}\n\nconst usedWorklets = {\n  withTiming,\n  withSpring,\n  bezier: Easing.bezier,\n  interpolate,\n  withDecay,\n  useAnimatedGestureHandler,\n  ...usedVectors,\n} as { [key: string]: any };\n\nexport function useInit() {\n  useRunOnce(\n    runOnUI(() => {\n      'worklet';\n\n      const x: { [key: string]: any } = {};\n      Object.keys(usedWorklets).forEach((key) => {\n        x[key] = usedWorklets[key];\n      });\n    }),\n  );\n}\n"]}