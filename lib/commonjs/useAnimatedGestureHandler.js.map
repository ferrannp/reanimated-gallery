{"version":3,"sources":["useAnimatedGestureHandler.tsx"],"names":["useRemoteContext","initialValue","initRef","current","context","useDiff","sharedValue","stash","prev","value","diff","name","___diffs","d","useAnimatedGestureHandler","handlers","__initialized","isAndroid","Platform","OS","event","FAILED","BEGAN","CANCELLED","ACTIVE","END","onInit","onEvent","beforeEach","stateDiff","state","pinchBeganAndroid","isBegan","shouldHandleEvent","_shouldSkip","onStart","onActive","oldState","onEnd","onFail","onCancel","undefined","onFinish","afterEach"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { Platform } from 'react-native';\nimport {\n  makeRemote,\n  useEvent,\n  useDerivedValue,\n} from 'react-native-reanimated';\nimport {\n  GestureHandlerGestureEvent,\n  GestureHandlerStateChangeEvent,\n} from 'react-native-gesture-handler';\n\nfunction useRemoteContext<T extends object>(initialValue: T) {\n  const initRef = useRef<{ context: T } | null>(null);\n  if (initRef.current === null) {\n    initRef.current = {\n      context: makeRemote(initialValue ?? {}),\n    };\n  }\n  const { context } = initRef.current;\n\n  return context;\n}\n\nexport function useDiff(sharedValue) {\n  const context = useRemoteContext({\n    stash: 0,\n    prev: null,\n  });\n\n  return useDerivedValue(() => {\n    context.stash =\n      context.prev !== null ? sharedValue.value - context.prev : 0;\n    context.prev = sharedValue.value;\n\n    return context.stash;\n  });\n}\n\nexport function diff(context: any, name: string, value: any) {\n  'worklet';\n\n  if (!context.___diffs) {\n    context.___diffs = {};\n  }\n\n  if (!context.___diffs[name]) {\n    context.___diffs[name] = {\n      stash: 0,\n      prev: null,\n    };\n  }\n\n  const d = context.___diffs[name];\n\n  d.stash = d.prev !== null ? value - d.prev : 0;\n  d.prev = value;\n\n  return d.stash;\n}\n\ntype Context = { [key: string]: any };\ntype Handler<T, TContext extends Context> = (\n  event: T,\n  context: TContext,\n) => void;\ntype ReturnHandler<T, TContext extends Context, R> = (\n  event: T,\n  context: TContext,\n) => R;\n\ninterface GestureHandlers<T, TContext extends Context> {\n  onInit?: Handler<T, TContext>;\n  shouldHandleEvent?: ReturnHandler<T, TContext, boolean>;\n  onEvent?: Handler<T, TContext>;\n  beforeEach?: Handler<T, TContext>;\n  afterEach?: Handler<T, TContext>;\n  onStart?: Handler<T, TContext>;\n  onActive?: Handler<T, TContext>;\n  onEnd?: Handler<T, TContext>;\n  onFail?: Handler<T, TContext>;\n  onCancel?: Handler<T, TContext>;\n  onFinish?: (\n    event: T,\n    context: TContext,\n    isCanceledOrFailed: boolean,\n  ) => void;\n}\n\ntype OnGestureEvent<T> = (event: T) => void;\n\nexport function useAnimatedGestureHandler<\n  T extends GestureHandlerGestureEvent,\n  TContext extends Context\n>(\n  handlers: GestureHandlers<T['nativeEvent'], TContext>,\n): OnGestureEvent<T> {\n  const context = useRemoteContext<any>({\n    __initialized: false,\n  });\n  const isAndroid = Platform.OS === 'android';\n\n  return useEvent(\n    (\n      event: T['nativeEvent'] &\n        GestureHandlerStateChangeEvent['nativeEvent'],\n    ) => {\n      'worklet';\n\n      // const UNDETERMINED = 0;\n      const FAILED = 1;\n      const BEGAN = 2;\n      const CANCELLED = 3;\n      const ACTIVE = 4;\n      const END = 5;\n\n      if (handlers.onInit && !context.__initialized) {\n        context.__initialized = true;\n        handlers.onInit(event, context);\n      }\n\n      if (handlers.onEvent) {\n        handlers.onEvent(event, context);\n      }\n\n      if (handlers.beforeEach) {\n        handlers.beforeEach(event, context);\n      }\n\n      const stateDiff = diff(context, 'pinchState', event.state);\n\n      const pinchBeganAndroid =\n        stateDiff === ACTIVE - BEGAN ? event.state === ACTIVE : false;\n\n      const isBegan = isAndroid\n        ? pinchBeganAndroid\n        : event.state === BEGAN;\n\n      if (isBegan && handlers.shouldHandleEvent) {\n        context._shouldSkip = !handlers.shouldHandleEvent(\n          event,\n          context,\n        );\n      }\n\n      if (!context._shouldSkip) {\n        if (isBegan && handlers.onStart) {\n          handlers.onStart(event, context);\n        }\n\n        if (event.state === ACTIVE && handlers.onActive) {\n          handlers.onActive(event, context);\n        }\n        if (\n          event.oldState === ACTIVE &&\n          event.state === END &&\n          handlers.onEnd\n        ) {\n          handlers.onEnd(event, context);\n        }\n        if (\n          event.oldState === ACTIVE &&\n          event.state === FAILED &&\n          handlers.onFail\n        ) {\n          handlers.onFail(event, context);\n        }\n        if (\n          event.oldState === ACTIVE &&\n          event.state === CANCELLED &&\n          handlers.onCancel\n        ) {\n          handlers.onCancel(event, context);\n        }\n      }\n\n      if (event.oldState === ACTIVE) {\n        context._shouldSkip = undefined;\n\n        if (handlers.onFinish) {\n          handlers.onFinish(\n            event,\n            context,\n            event.state === CANCELLED || event.state === FAILED,\n          );\n        }\n      }\n\n      if (handlers.afterEach) {\n        handlers.afterEach(event, context);\n      }\n    },\n  );\n}\n"]}